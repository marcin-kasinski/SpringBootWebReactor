logging:
    level:
        root: INFO 
    file: logs/application.log
    level.org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG    
server:
    port: 8080
spring.main.allow-bean-definition-overriding: true
spring:
    application:
        name: SpringBootWebReactor
    queries:
        users-query: select email, password, active from user where email=?
        roles-query: select u.email, r.role from user u inner join user_role ur on(u.user_id=ur.user_id) inner join role r on(ur.role_id=r.role_id) where u.email=?
#spring.jpa.hibernate.ddl-auto=create
    datasource:
        url: jdbc:mysql://localhost:3306/test
        username: root
        password: 
#spring.datasource.driver-class-name=Driver 
# Allows Hibernate to generate SQL optimized for a particular DBMS
    jpa:
        show_sql: true
        properties:
            hibernate.dialect: org.hibernate.dialect.MySQL5Dialect
            hibernate.show_sql: true
    rabbitmq:
        host: rabbitmq
        password: guest
        port: 5672
    zipkin:
        baseUrl: http://zipkin:30080
        sender:
            type: web
    sleuth:
        sampler:
            percentage: 1
            probability: 1
#if you want to send spans via kafka...            
#    kafka:
#        bootstrap-servers: kafka-service:9092            
    cloud:
        consul:
            discovery:
                preferIpAddress: true
                instanceId: ${spring.application.name}:${vcap.application.instance_id:${spring.application.instance_id:${random.value}}}
            port: 8500        
        stream:
            defaultBinder: rabbit1
            bindings:
                worksChannel:
                    destination: my-topic
                    group: order
                    content-type: application/json
                    binder: rabbit1
                worksChannelKafka:
                    destination: my-topic
                    group: order
                    content-type: application/json
                    binder: kafka
            binders:
                rabbit1:
                    type: rabbit
                    environment:
                        spring:
                            rabbitmq:
                                host: rabbitmq
                                port: 5672
                                username: guest
                                password: guest
                                virtual-host: /
                kafka:
                    type: kafka
                    environment:
                        spring:
                            cloud:
                                stream:
                                    kafka:
                                        binder:
#                                            brokers: kafka-service
#                                            zkNodes: kafka-service
                                            brokers: kafka-0.k-hs.default.svc.cluster.local,kafka-1.k-hs.default.svc.cluster.local,kafka-2.k-hs.default.svc.cluster.local
                                            zkNodes: zk-0.zk-hs.default.svc.cluster.local,zk-1.zk-hs.default.svc.cluster.local,zk-2.zk-hs.default.svc.cluster.local
                                            defaultZkPort: 2181
                                            defaultBrokerPort: 9092
            kafka:
                binder:
#                    brokers: kafka-service
#                    zkNodes: kafka-service
                    brokers: kafka-0.k-hs.default.svc.cluster.local,kafka-1.k-hs.default.svc.cluster.local,kafka-2.k-hs.default.svc.cluster.local
                    zkNodes: zk-0.zk-hs.default.svc.cluster.local,zk-1.zk-hs.default.svc.cluster.local,zk-2.zk-hs.default.svc.cluster.local
                    defaultZkPort: 2181
                    defaultBrokerPort: 9092
                    headers:
                        - header1
                        - header2
                        - X-B3-TraceId
                        - X-B3-SpanId
                        - X-B3-Sampled
                        - X-B3-ParentSpanId
                        - X-Span-Name
                        - X-Process-Id
endpoints:
    prometheus:
        enabled: true 
management:
    security:
        enabled: false
    endpoint:
        metrics:
            enabled: true
        prometheus:
            enabled: true 
    endpoints:
        web:
            exposure:
                include: "info, health, prometheus, metrics"
#                include: "*"
        metrics:
            enabled: true
    metrics:
        export:
            prometheus:
                enabled: true            
                        